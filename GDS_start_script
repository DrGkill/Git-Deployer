#!/bin/sh

### BEGIN INIT INFO
# Provides:          gds
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs $network
# Should-Start:      postgresql
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start GDS
# Description:  GDS is a deamon who control the git-deployer script
# 		to auto deploy projects
# Author: Guillaume Seigneuret
# CopyRight OmegaCube 2012
### END INIT INFO


GDS_HOME=/home/Git-Deployer
GDS_BIN=$GDS_HOME/GDS.pl
GDS_PID=/var/run/gds.pid
PORT=32337
PATTERN_RECOG="$PORT.*LISTEN.*perl"

# GDS options
#  -d, 		Daemon mode
#  -l log_file, Specify another log file than the one in conf file
#  -p pid_file, Specify another pid file than the one in conf file

[ ! -e "${GDS_BIN}" ] && echo "GDS ERROR - ${GDS_BIN} does not exist" && exit 1

GDS_COMMAND="$GDS_BIN -d -p $GDS_PID"
[ -e $GDS_PID ] && PID=`cat $GDS_PID`


case "$1" in
	start)
		echo -n "Starting Git Deployment Server ... "
		$GDS_COMMAND && echo "[STARTED]" && exit 0
		echo "[FAILED]" && exit 1
		;;
	stop)
		echo -n "Stoping Git Deployment Server ... "
		[ -z $PID ] && echo "Could not retreive GDS PID :(" && exit 1
		if [ kill $PID > /dev/null 2>&1 ]
		then
			rm $GDS_PID && echo "[STOPED]" && exit 0
		else
			echo "[FAILED]" && exit 1
		fi
		;;
	restart)
		echo "Restarting Git Deployment Server ... "
		$0 stop
		while [ $? -eq 0 ]
		do
			result=`netstat -anpe  | grep -E $PATTERN_RECOG`
		done
		$0 start
		exit 0
		;;
	status)
		echo -n "GDS status ... "
		result=`netstat -anpe  | grep -E $PATTERN_RECOG`
		if [ $? -eq 0 ]
		then
			echo "[ OK ]"
			exit 0
		else
			echo "[!!! KO !!!]"
			exit 1
		fi
		;;
	*)
		echo "GDS usage: $0 {start|stop|restart}"
		exit 1
		;;
esac
